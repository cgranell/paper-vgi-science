{
    "contents" : "---\ntitle: \"Analysis for creating final figures included in CEUS paper, Review 1 paper\"\nauthor: \"Carlos Granell\"\ndate: \"Dec 2015\"\noutput: html_document\n---\n\n## Synopsis\nThis paper investigates the research that has been carried out on volunteered geographic information using the method of a systematic mapping study. It describes the development of a classification schema that captures three levels of main focus, sub-focus and intended use, and analyzes the relationships with the employed data sources and analysis methods. It purposefully limits the scope to the pioneering field of crisis management and disaster response, but the described approach - the systematic mapping study - and the developed classification schema are easily adaptable to different application domains or future developments. \n\nThe results show that a hypothesized consolidation of research, characterized through the building of canonical bodies of knowledge and advanced application cases with refined methodology, has not yet happened. The majority of the studies investigate the challenges and potential solutions of data handling, with fewer studies focusing on socio-technological issues or advanced applications. This trend is currently showing no sign of change, highlighting that VGI research is still very much technologydriven as opposed to theory- or application-driven. From the results of the systematic mapping study, the authors formulate and discuss several research objectives for future work, which could lead to a stronger, more theory-driven treatment of the topic VGI in GIScience.\n\n## Loading data\n\n```{r global_options, include=FALSE}\n##  Packages required for the analysis \nsuppressWarnings(require(plyr))\nsuppressWarnings(require(ggplot2))\nsuppressWarnings(require(gridExtra))  # grid.arrange\nsuppressWarnings(require(knitr))\n\nopts_chunk$set(fig.width=12, fig.height=8, warning=FALSE, message=FALSE)\n\n#  Print in digits rather than scientific notation\noptions(\"scipen\"=100, \"digits\"=0)\n```\n\n```{r loading_data}\nsetwd(\"C:/Users/cgranell/Data/MyCode/paper-vgi-science/\")\nurl <- \"https://github.com/cgranell/paper-vgi-science/raw/master/data/ceus-r1/cleandata-ceus-R1.rda\"\ndataFile <- \"cleandata-ceus-R1.rda\"\npathToDataFile <- paste(\"./data/ceus-r1/\", dataFile, sep=\"\")\n\nif (!file.exists(pathToDataFile)) {\n    file <- download.file(url, destfile=pathToDataFile)\n}\n\nload(pathToDataFile)\n```\n\n## Preprocessing scripts \n\n```{r}\ngetUniqueVenues <- function() {\n    papers <- unique(data$p.id)\n    numPapers = length(papers)\n    \n    venues <- data.frame(\n        p.id=character(numPapers), \n        p.venue=character(numPapers),\n        p.venuetype=character(numPapers),\n        stringsAsFactors=FALSE)\n        \n    \n    for (i in 1:numPapers) {\n        firstVenue <- sapply(data[data$p.id==papers[i], c(\"p.venue\", \"p.venuetype\")], function(d) {d[1]})        \n        # Add a new row (paper id + first ocurrence of venue) to the data.frame\n        venues [i, ] <- c(papers[i], \n                          as.character(firstVenue[c(\"p.venue\")]), \n                          as.character(firstVenue[c(\"p.venuetype\")]))   \n    }\n    return (venues)\n}\n```\n\n```{r}\ngetUniqueSources <- function() {\n    papers <- unique(data$p.id)\n    numPapers = length(papers)\n    \n    sources <- data.frame(\n        p.id=character(numPapers), \n        f.cat0=character(numPapers),\n        f.cat1=character(numPapers),\n        d.source=character(numPapers),\n        d.official=character(numPapers),\n        stringsAsFactors=FALSE)\n    \n    \n    for (i in 1:numPapers) {\n        firstSource <- sapply(data[data$p.id==papers[i], c(\"f.cat0\", \"f.cat1\", \"f.uc0\", \"d.source\", \"d.official\")], function(d) {d[1]})        \n        # Add a new row (paper id + first ocurrence of source) to the data.frame\n        sources [i, ] <- c(papers[i],\n                           as.character(firstSource[c(\"f.cat0\")]), \n                           as.character(firstSource[c(\"f.cat1\")]), \n                           as.character(firstSource[c(\"d.source\")]), \n                           as.character(firstSource[c(\"d.official\")]))   \n    }\n    return (sources)\n}\n```\n\n\n```{r}\npercent <- function(x, digits = 2, format = \"f\", ...) {\n    paste0(formatC(100 * x, format = format, digits = digits, ...), \"%\")\n}\n```\n\n\n## Results: Final figures  \nR scripts below describe how the data were processed for creating figures included in the submitted paper.\n\n### Distribution of publication venues\nWhat are the publication venues VGI research & data science have been published in? (Annex A)\n\n```{r}\n# get the list of unique venues\nsubsetVenues <- getUniqueVenues()\n\n# Run the function table() on the value of \"p.venue\" for each group (p.venue, p.venuetype)\nsubsetVenues0 <- ddply(subsetVenues, c(\"p.venue\", \"p.venuetype\"), summarise, \n           countVenue  = as.integer(table(p.venue)))\n\n# Journal and conference rates. Note that total is 57 because one paper is a technical report\nsumJournals <- sum(subsetVenues0[subsetVenues0$p.venuetype==\"journal\", c(\"countVenue\")])\nsumConferences <- sum(subsetVenues0[subsetVenues0$p.venuetype==\"conference\", c(\"countVenue\")])\nrateJournals <- (sumJournals / (sumJournals + sumConferences))\nrateConferences <- (sumConferences / (sumJournals + sumConferences))\n\n# Legend labels including  percent\nlegend.txt = c(paste0(\"Conference: \", percent(rateConferences)), paste0(\"Journal: \", percent(rateJournals)))\nlegend.txt\n\n## Print list of venues in a tabular format to add it to the paper as annex A\nprint.data.frame(subsetVenues0[,c(\"p.venue\", \"countVenue\")])\n\n### RQ2: Focus and intended uses of papers\n```\n\nFig 4a shows the distribution of papers along the main categories. Note: 5 papers are marked as data-centric and human-centric, and 13 papers are marked as data-centric and application-centric. So 18 paper have two main categorie. In total, 59 + 18 = 77, which is the sum of the three bars in Fig 4a.\n```{r}\n\nsubsetCat <- data[,c(\"p.id\", \"f.cat0\",\"f.cat1\", \"f.cat2\", \"p.year\")]\n# Run the function length() on the unique values of \"p.id\" for each group (f.cat0) \nsubsetCat0 <- ddply(subsetCat, c(\"f.cat0\"), summarise, \n                    countCat0  = length(unique(p.id)))\n```\n\n```{r, echo=FALSE}\nfig4a <- ggplot(subsetCat0, aes(x=reorder(f.cat0, countCat0), y=countCat0, fill=f.cat0)) +\n        geom_bar(stat=\"identity\", width=0.4, colour=\"black\") + \n        #coord_flip() +\n        theme_bw(base_family = \"Times\", base_size=10) + \n        geom_text(aes(label=countCat0), vjust=1.5, colour=\"black\", size=3) +\n        scale_y_continuous(breaks=c(seq(0,60,5))) +\n        labs(x = \"Main categories\") + \n        labs(y = \"Number of papers\") + \n        labs(title = \"Figure 4a:  Number of papers by main category\") +\n        scale_colour_brewer(palette=\"Set1\") +\n        theme(legend.position=\"none\") + # remove legend\n        theme(panel.grid.major.x = element_blank(),\n        panel.grid.minor.x = element_blank()) # Hide the horizontal grid lines\n\n```\n\nFig4b shows the distribution of use cases along the main categories\n```{r}\nsubsetUseCases <- data[,c(\"p.id\", \"f.cat0\",\"f.cat1\", \"f.cat2\", \"f.uc0\", \"f.uc1\", \"p.year\")]\n\n# Run the function length() on the unique values of \"p.id\" for each group (f.cat0, f.uc0) \nsubsetUseCases0 <- ddply(subsetUseCases, c(\"f.cat0\", \"f.uc0\"), summarise, \n                         countCat0  = length(unique(p.id)))\n\n# Turn NA as a factor level\nsubsetUseCases0$f.uc0 <- addNA(subsetUseCases0$f.uc0)\n# Rename level of a factor by index: change fourh item, NA, to \"not specified\".\nlevels(subsetUseCases0$f.uc0)[4] <- \"not specified\"\n```\n\n```{r echo=FALSE}\nfig4b <- ggplot(subsetUseCases0, aes(x=reorder(f.cat0, countCat0), y=countCat0, fill=f.uc0)) +\n        geom_bar(stat=\"identity\", width=0.4, colour=\"black\") + \n        #coord_flip() +\n        theme_bw(base_family = \"Times\", base_size=10) + \n        #geom_text(aes(label=countCat0), vjust=1.5, colour=\"black\", size=3) +\n        scale_y_continuous(breaks=c(seq(0,40,5))) +\n        labs(x = \"Main categories\") + \n        labs(y = \"Number of papers\") + \n        labs(title = \"Figure4b: Overall use cases by main category\") +\n        scale_color_brewer(palette=\"Set2\") +\n        labs(fill=\"Use cases\") +   # set the legend title\n        theme(legend.position=c(0,1), legend.justification=c(0,1)) +  # set legend position inside graphic, tpo-left position    \n        theme(legend.background=element_blank()) + # Remove overall border of legend\n        # theme(legend.position=\"none\") + # remove legend\n        theme(panel.grid.major.x = element_blank(),\n         panel.grid.minor.x = element_blank()) # Hide the horizontal grid lines\n```\n\n```{r echo=FALSE}\nsuppressWarnings(grid.newpage())\nsuppressWarnings(grid.arrange(fig4a, fig4b, ncol=2, nrow=1))\n```\n\n\nNext Figure shows the distribution of sub-categories/focuses within each category. (Note 19 Aug 2015: This figure will not be part of the paper. Instead, we have updated the next three figures to add the total number of papers per subcategory in parenthesis in the legend. For the time being, this figure is still relevant for internal use in case more papers are added to the review)\n\n```{r}\n# # Run the function length() on the unique values of \"p.id\" for each group (f.cat0, f.cat1) \n# to sum the ocurrences  of f.cat1 within each group\nsubsetCat1 <- ddply(subsetCat, c(\"f.cat0\", \"f.cat1\"), summarise, \n                        countCat1 = length(unique(p.id)))\n\n# Get the sub-category (f.cat1), sorted first by category (f.cat0), then by count  \ncat1order <- subsetCat1$f.cat1[order(subsetCat1$f.cat0, subsetCat1$countCat1)]\n# Turn f.cat1 into a factor, with levels in the order of cat1order\nsubsetCat1$f.cat1 <- factor(subsetCat1$f.cat1, levels=cat1order)\n```\n\n```{r echo=FALSE}\nfigOut <- ggplot(subsetCat1, aes(x=f.cat1, y=countCat1, fill=f.cat0)) +\n        geom_bar(stat=\"identity\", width=0.6, colour=\"black\") + \n        coord_flip() +\n        theme_bw(base_family = \"Times\", base_size=10) + \n        theme(panel.grid.major.y = element_blank()) +\n        scale_colour_brewer(palette=\"Set1\") +\n        #scale_fill_brewer(\"clarity\") +\n        geom_text(aes(label=countCat1), hjust=1.5, colour=\"black\", size=3) +\n        scale_y_continuous(breaks=c(seq(0,30,5))) +\n        labs(x = \"Sub-category / focus\") + \n        labs(y = \"Number of papers\") +\n        guides(fill=guide_legend(title=\"Main categories\")) +  # Set the legend title\n        theme(legend.position=c(1,.1), legend.justification=c(1,0)) +  # set legend position inside graphic, bottom-right position    \n        theme(legend.background=element_blank()) + # Remove overall border of legend\n        labs(title = \"Figure: Number of papers by category and sub-category (or focus)\") +\n\nsuppressWarnings(grid.newpage())\nsuppressWarnings(grid.arrange(figOut, ncol=1, nrow=1))\n```\n\n\nFig 5 shows the most frequently intended uses within the data-centric category\n \n \n```{r}\n# Run the function length() the unique values of \"p.id\" for each group (f.cat0, f.cat1, f.cat2) \n# to sum the ocurrences  of f.cat2 within each group\nsubsetCat2 <- ddply(subsetCat, c(\"f.cat0\", \"f.cat1\", \"f.cat2\"), summarise, \n                    countCat2 = length(unique(p.id)))\n\ndataCentric <- subset(subsetCat2,f.cat0==\"data-centric\")\n\n# Get the intended uses (f.cat2), sorted first by cat1 (focus), then by count  \ncat2order <- dataCentric$f.cat2[order(dataCentric$f.cat1, dataCentric$countCat2)]\n# Turn f.cat2 into a factor, with levels in the order of cat2order\ndataCentric$f.cat2 <- factor(dataCentric$f.cat2, levels=cat2order)\n\n# A trick to change legend title is to rename the column in the dataframe\nnames(dataCentric)[names(dataCentric)==\"f.cat1\"]  <- \"Focus\"\n\n# Change legend labels to add the total number of papers that belong to each subcategory (f.cat1).\ndataCentric.limits <- c(\"data preservation\",\n                        \"data preparation\",\n                        \"data policies\", \n                        \"data contextualization\", \n                        \"data quality and assessment\")\n\ndataCentric.legend <- c(\"data preservation (1)\",\n                        \"data preparation (26)\",\n                        \"data policies (2)\",\n                        \"data contextualization (15)\",\n                        \"data quality and assessment (14)\")\n\n```\n\n```{r echo=FALSE}\nfig5 <- ggplot(dataCentric, aes(x=f.cat2, y=countCat2, fill=Focus)) +    \n        geom_bar(stat=\"identity\", width=0.6, colour=\"black\") + \n        coord_flip() +\n        theme_bw(base_family = \"Times\", base_size=10) +\n        scale_colour_brewer(palette=\"Set1\") +\n        scale_y_continuous(breaks=c(seq(0,15,1))) +\n        labs(y = \"Number of papers\") + \n        labs(x = \"Intended uses within data-centric category\") + \n        labs(title = \"Figure 5:  Intended uses by focus (sub-category) within the data-centric category\") +\n        geom_text(aes(label=countCat2), hjust=1.5, colour=\"black\", size=3) +\n        theme(legend.position=c(1,.1), legend.justification=c(1,0)) +  # set legend position inside graphic, bottom-roght position    \n        theme(legend.background=element_blank()) + # Remove overall border of legend\n        scale_fill_discrete(\n          limits=dataCentric.limits,\n          labels=dataCentric.legend) +  # custom legend labels\n        #theme(legend.key=element_blank()) + # Remove border around each item of legend\n        theme(panel.grid.major.y = element_blank()) # No horizontal grid lines\n\nsuppressWarnings(grid.newpage())\nsuppressWarnings(grid.arrange(fig5, ncol=1, nrow=1))\nnames(dataCentric)[names(dataCentric)==\"Focus\"]  <- \"f.cat1\"\n```\n\nFig 6 shows the most frequently intended uses within the human-centric category\n```{r}\nhumanCentric <- subset(subsetCat2,f.cat0==\"human-centric\")\n# Get the intended uses (f.cat2), sorted first by cat1 (focus), then by count  \ncat2order <- humanCentric$f.cat2[order(humanCentric$f.cat1, humanCentric$countCat2)]\n# Turn f.cat2 into a factor, with levels in the order of cat2order\nhumanCentric$f.cat2 <- factor(humanCentric$f.cat2, levels=cat2order)\n\n# A trick to change legend title is to rename the column in the dataframe\nnames(humanCentric)[names(humanCentric)==\"f.cat1\"]  <- \"Focus\"\n\n# Change legend labels to add the total number of papers that belong to f.cat1.\nhumanCentric.limits <- c(\"human relations\",\n                         \"human perception\",\n                         \"human mobility\", \n                         \"human activities\")\n                         \nhumanCentric.legend <- c(\"human relations (3)\",\n                         \"human perception (1)\",\n                         \"human mobility (4)\", \n                         \"human activities (5)\")\n```\n\n```{r echo=FALSE}\nfig6 <- ggplot(humanCentric, aes(x=f.cat2, y=countCat2, fill=Focus)) +    \n        geom_bar(stat=\"identity\", width=0.6, colour=\"black\") +\n        coord_flip() +\n        theme_bw(base_family = \"Times\", base_size=10) +\n        scale_colour_brewer(palette=\"Set1\") +\n        scale_y_continuous(breaks=c(seq(0,3,1))) +\n        labs(y = \"Number of papers\") + \n        labs(x = \"Intended uses within human-centric category\") + \n        labs(title = \"Figure 6: Intended uses by focus (sub-category) within the human-centric category\") +\n        geom_text(aes(label=countCat2), hjust=1.5, colour=\"black\", size=3) +\n        guides(fill=guide_legend(title=\"Focus\")) +  # Set the legend title\n        scale_fill_discrete(\n          limits=humanCentric.limits,\n          labels=humanCentric.legend) +  # custom legend labels\n        #theme(legend.position=c(1.5,.1), legend.justification=c(1,0)) +  # set legend position inside graphic, bottom-right position    \n        #theme(legend.background=element_blank()) + # Remove overall border of legend\n        #theme(legend.key=element_blank()) + # Remove border around each item of legend\n        theme(panel.grid.major.y = element_blank()) # No horizontal grid lines\n\nsuppressWarnings(grid.newpage())\nsuppressWarnings(grid.arrange(fig6, ncol=1, nrow=1))\nnames(humanCentric)[names(humanCentric)==\"Focus\"]  <- \"f.cat1\"\n```\n\n\nFig 7 shows the most frequently intended uses within the application-centric category\n```{r}\napplicationCentric <- subset(subsetCat2,f.cat0==\"application-centric\")\n# Get the intended uses (f.cat2), sorted first by cat1 (focus), then by count  \ncat2order <- applicationCentric$f.cat2[order(applicationCentric$f.cat1, applicationCentric$countCat2)]\n# Turn f.cat2 into a factor, with levels in the order of cat2order\napplicationCentric$f.cat2 <- factor(applicationCentric$f.cat2, levels=cat2order)\n\n# A trick to change legend title is to rename the column in the dataframe\nnames(applicationCentric)[names(applicationCentric)==\"f.cat1\"]  <- \"Focus\"\n\n# Change legend labels to add the total number of papers that belong to f.cat1.\nappCentric.limits <- c(\"recovery and response\",\n                       \"monitoring\",\n                       \"health\",\n                       \"detection and prediction\",\n                       \"coordination and organization\")\n\nappCentric.legend <- c(\"recovery and response (8)\",\n                       \"monitoring (10)\",\n                       \"health (2)\",\n                       \"detection and prediction (5)\",\n                       \"coordination and organization (1)\")\n\n```\n\n```{r echo=FALSE}\nfig7 <- ggplot(applicationCentric, aes(x=f.cat2, y=countCat2, fill=Focus)) +    \n        geom_bar(stat=\"identity\", width=0.6, colour=\"black\") +\n        coord_flip() +\n        theme_bw(base_family = \"Times\", base_size=10) +\n        scale_colour_brewer(palette=\"Set1\") +\n        scale_y_continuous(breaks=c(seq(0,4,1))) +\n        labs(y = \"Number of papers\") + \n        labs(x = \"Intended uses within application-centric category\") + \n        labs(title = \"Figure 9: Intended uses by focus (sub-category) within the application-centric category\") +\n        geom_text(aes(label=countCat2), hjust=1.5, colour=\"black\", size=3) +\n        scale_fill_discrete(\n          limits=appCentric.limits,\n          labels=appCentric.legend) +  # custom legend labels\n        #theme(legend.position=c(1,0), legend.justification=c(1,0)) +  # set legend position inside graphic, bottom-right position    \n        #theme(legend.background=element_blank()) + # Remove overall border of legend\n        #theme(legend.key=element_blank()) + # Remove border around each item of legend\n        theme(panel.grid.major.y = element_blank()) # No horizontal grid lines\n\nsuppressWarnings(grid.newpage())\nsuppressWarnings(grid.arrange(fig7, ncol=1, nrow=1))\nnames(applicationCentric)[names(applicationCentric)==\"Focus\"]  <- \"f.cat1\"\n```\n\n\n\n### RQ3: Data Sources\n\nFig 8 shows the most frequently VGI sources by main category\n```{r}\nsubsetSources <- getUniqueSources()\n\n# Run the function table() on the value of \"d.source\" for each group (d.source, d.official)\nsubsetSources0 <- ddply(subsetSources, c(\"f.cat0\", \"d.source\"), summarise, \n                        countSource  = length(d.source))\n\n# Get the sources  (d.source), sorted by count  \nsourceorder <- subsetSources0$d.source[order(subsetSources0$countSource)]\n\n# Turn d.source into a factor, with levels in the order of sourceorder\nsubsetSources0$d.source <- factor(subsetSources0$d.source, levels=sourceorder)\n\n# Turn NA as a factor level\nsubsetSources0$d.source <- addNA(subsetSources0$d.source)\n# Rename level of a factor by index: change fourh item, NA, to \"Not specified\".\nlevels(subsetSources0$d.source)[24] <- \"Not specified\"\n```\n\n```{r echo=FALSE}\nfig8 <- ggplot(subsetSources0, aes(x=f.cat0, y=d.source, fill=f.cat0)) +\n        geom_point(aes(size=countSource), shape=21, colour=\"black\") +\n        scale_size_area(max_size=15, guide=FALSE) + \n        theme_bw(base_family = \"Times\", base_size=10) + \n        guides(fill=FALSE) +\n        labs(x = \"Main categories\") + \n        labs(y = \"VGI source\") +\n        labs(title = \"Figure 8:  VGI sources used by main category\") +\n        scale_colour_brewer(palette=\"Set1\") +\n        geom_text(aes(label=countSource), vjust=0.1, colour=\"grey30\", size=2)+   # Add labels from data\n        theme(panel.grid.major.x = element_blank()) # Hide the vertical grid lines\n\n\nsuppressWarnings(grid.newpage())\nsuppressWarnings(grid.arrange(fig8, ncol=1, nrow=1))\n\n```\n\n## Distribution of intended uses over time \nFig 9 shows the distribution of intended uses over time by main category\n\n```{r}\n# Run the function length() on the value of \"f.cat2\" for each group (f.cat0, f.cat1, f.cat2, p.year) \n# to sum the ocurrences  of f.cat2 within each group\nsubsetCat3 <- ddply(subsetCat, c(\"f.cat0\", \"f.cat1\", \"f.cat2\", \"p.year\"), summarise, \n                    countCat3 = length(f.cat2))\n\n# Get the intended uses (f.cat2), sorted first by cat1 (focus), then by count\ncat2order <- subsetCat3$f.cat2[order(subsetCat3$f.cat1, subsetCat3$countCat3)]\n# Turn f.cat2 into a factor, with levels in the order of cat2order\nsubsetCat3$f.cat2 <- factor(subsetCat3$f.cat2, levels=cat2order)\n```\n\n```{r echo=FALSE}\nfig9 <- ggplot(subsetCat3, aes(x=p.year, y=f.cat2, colour=f.cat0)) +\n        geom_point(aes(size=countCat3)) + \n        scale_size_continuous(range=c(1,6)) +  # range of values for dots size (number of papers)\n        theme_bw(base_family = \"Times\", base_size=10) + \n        scale_size_area(max_size=12) +   # scale dots to make them bigger\n        labs(colour=\"Category\", size=\"Number of\\n papers\") +\n        labs(x = \"Year of publication\") + \n        labs(y = \"Intended uses\") + \n        labs(title = \"Figure 11: Intended uses over time by main category\") +\n        geom_text(aes(label=countCat3), vjust=0.1, colour=\"black\", size=2)   # Add labels from data\n\nsuppressWarnings(grid.newpage())\nsuppressWarnings(grid.arrange(fig9, ncol=1, nrow=1))\n```\n\n\n```{r echo=FALSE}\n#suppressWarnings(knit2html(input = \"final.Rmd\"))\n```\n",
    "created" : 1449229611630.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "745385197",
    "id" : "EB84A488",
    "lastKnownWriteTime" : 1449230481,
    "path" : "C:/Users/cgranell/Data/MyCode/paper-vgi-science/scripts/final-ceus-r1.Rmd",
    "project_path" : "scripts/final-ceus-r1.Rmd",
    "properties" : {
    },
    "relative_order" : 2,
    "source_on_save" : false,
    "type" : "r_markdown"
}