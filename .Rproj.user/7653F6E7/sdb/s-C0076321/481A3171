{
    "contents" : "#\n# author: cgranell\n# aim: analytic scripts for exploratory data analysis (CEUS)\n#\n\nlibrary(ggplot2)## ggplot\nlibrary(plyr)   ## ddply\n\n\nurl <- \"https://github.com/cgranell/paper-vgi-science/raw/master/data/ceus/cleandata.rda\"\ndataFile <- \"cleandata.rda\"\npathToDataFile <- paste(\"./data/ceus/\", dataFile, sep=\"\")\n\nif (!file.exists(pathToDataFile)) {\n    file <- download.file(url, destfile=pathToDataFile)\n}\n\nload(pathToDataFile)\n\n# Note: dateset is loaded into R object called \"data\"\nsummary(data)\n\n# number of representative papers \nnumPapers <- length(unique(data$p.id))  # 58\n\n\n######################################################\n### R code and functions for exploratory graphs  \n######################################################\n\ngetUniqueVenues <- function() {\n    papers <- unique(data$p.id)\n    numPapers = length(papers)\n    \n    venues <- data.frame(\n        p.id=character(numPapers), \n        p.venue=character(numPapers),\n        p.venuetype=character(numPapers),\n        stringsAsFactors=FALSE)\n        \n    \n    for (i in 1:numPapers) {\n        firstVenue <- sapply(data[data$p.id==papers[i], c(\"p.venue\", \"p.venuetype\")], function(d) {d[1]})        \n        # Add a new row (paper id + first ocurrence of venue) to the data.frame\n        venues [i, ] <- c(papers[i], \n                          as.character(firstVenue[c(\"p.venue\")]), \n                          as.character(firstVenue[c(\"p.venuetype\")]))   \n    }\n    return (venues)\n}\n\n\ngetUniqueSources <- function() {\n    papers <- unique(data$p.id)\n    numPapers = length(papers)\n    \n    sources <- data.frame(\n        p.id=character(numPapers), \n        f.cat0=character(numPapers),\n        f.cat1=character(numPapers),\n        d.source=character(numPapers),\n        d.official=character(numPapers),\n        stringsAsFactors=FALSE)\n    \n    \n    for (i in 1:numPapers) {\n        firstSource <- sapply(data[data$p.id==papers[i], c(\"f.cat0\", \"f.cat1\", \"f.uc0\", \"d.source\", \"d.official\")], function(d) {d[1]})        \n        # Add a new row (paper id + first ocurrence of source) to the data.frame\n        sources [i, ] <- c(papers[i],\n                           as.character(firstSource[c(\"f.cat0\")]), \n                           as.character(firstSource[c(\"f.cat1\")]), \n                           as.character(firstSource[c(\"d.source\")]), \n                           as.character(firstSource[c(\"d.official\")]))   \n    }\n    return (sources)\n}\n\n\npercent <- function(x, digits = 2, format = \"f\", ...) {\n    paste0(formatC(100 * x, format = format, digits = digits, ...), \"%\")\n}\n\n\n## REVISIT FOR CEUS \n## Distribution of publication venues \n## What are the publication venues VGI research & data science have been published in? \nsubsetVenues <- getUniqueVenues()\n\n#### What are the publication venues VGI research & data science have been published in? \n## Run the function table() on the value of \"p.venue\" for each group (p.venue, p.venuetype)\nsubsetVenues0 <- ddply(subsetVenues, c(\"p.venue\", \"p.venuetype\"), summarise, \n           countVenue  = as.integer(table(p.venue)))\n\n\n# Journal and conference rates. Note that total is 57 because one paper is a technical report\nsumJournals <- sum(subsetVenues0[subsetVenues0$p.venuetype==\"journal\", c(\"countVenue\")])\nsumConferences <- sum(subsetVenues0[subsetVenues0$p.venuetype==\"conference\", c(\"countVenue\")])\nrateJournals <- (sumJournals / (sumJournals + sumConferences))\nrateConferences <- (sumConferences / (sumJournals + sumConferences))\n\n# Legend labels including  percent\nlegend.txt = c(paste0(\"Conference: \", percent(rateConferences)), paste0(\"Journal: \", percent(rateJournals)))\nlegend.txt\n\n## Print list of venues in a tabular format to add it to the paper as annex\nprint.data.frame(subsetVenues0[,c(\"p.venue\", \"p.venuetype\")])\n\n\n\n#################\n### RQ3: Data sources \n#### What are the most frequently VGI data sources? \n#### What are the most popular sources? \n#### Are sources used in isolation or in combination?\n#################\n\nsubsetSources <- getUniqueSources()\n\n#### What are the most frequently VGI data sources? \n## Run the function table() on the value of \"d.source\" for each group (d.source, d.official)\nsubsetSources0 <- ddply(subsetSources, c(\"f.cat0\", \"f.cat1\", \"d.source\"), summarise, \n                       countSource  = as.integer(table(d.source)))\n\nsubsetSources0 <- ddply(subsetSources, c(\"f.cat0\", \"d.source\"), summarise, \n                        countSource  = length(d.source))\n\n# Get the sources  (d.source), sorted first by category (f.cat0), then by count  \nsourceorder <- subsetSources0$d.source[order(subsetSources0$f.cat0, subsetSources0$countSource)]\nsourceorder <- subsetSources0$d.source[order(subsetSources0$countSource)]\n# Turn d.source into a factor, with levels in the order of sourceorder\nsubsetSources0$d.source <- factor(subsetSources0$d.source, levels=sourceorder)\n\n\n# Turn NA as a factor level\nsubsetSources0$d.source <- addNA(subsetSources0$d.source)\n# Rename level of a factor by index: change fourh item, NA, to \"Not specified\".\nlevels(subsetSources0$d.source)[19] <- \"Not specified\"\nlevels(subsetSources0$d.source)\n\nppi=600\njpeg(filename = \"./figures/ceus-fig10.jpg\",width=8*ppi, height=5*ppi, res=ppi, quality=100)\nggplot(subsetSources0, aes(x=f.cat0, y=d.source, fill=f.cat0)) +\n  geom_point(aes(size=countSource), shape=21, colour=\"black\") +\n  scale_size_area(max_size=25, guide=FALSE) + \n  theme_bw(base_family = \"Times\", base_size=10) + \n  guides(fill=FALSE) +\n  labs(x = \"Main categories\") + \n  labs(y = \"VGI source\") +\n  labs(title = \"Figure 10:  VGI sources used by main category\") +\n  scale_colour_brewer(palette=\"Set1\") +\n  geom_text(aes(label=countSource), vjust=-0.1, colour=\"grey30\", size=2)+   # Add labels from data\n  theme(panel.grid.major.x = element_blank()) # Hide the veritical grid lines\ndev.off()\n\n############ FINAL FIGURE #################\nppi=600\njpeg(filename = \"./figures/fig10.jpg\",width=8*ppi, height=5*ppi, res=ppi, quality=100)\n## graph of counts, reorder to show counts of \"d.source\" in order\nggplot(subsetSources0, aes(x=d.source, y=countSource, fill=f.cat0)) +\n    geom_bar(stat=\"identity\", width=0.6, colour=\"black\") +\n    coord_flip() +\n    theme_bw(base_family = \"Times\", base_size=10) + \n    scale_colour_brewer(palette=\"Set1\") +\n    scale_y_continuous(breaks=c(seq(0,28,2))) +\n    labs(x = \"VGI source\") + \n    labs(y = \"Number of papers\") + \n    #labs(title = \"Counts of main VGI sources\") +\n    #geom_text(aes(label=countSource), hjust=1.5, colour=\"black\", size=3) +\n    guides(fill=guide_legend(title=\"Category\")) +  # Set the legend title\n    theme(legend.position=c(1,0), legend.justification=c(1,0)) +  # set legend position inside graphic, bottom-right position    \n    theme(panel.grid.major.y = element_blank()) # Hide the horizontal grid lines\ndev.off()\n############ END FINAL FIGURE #################\n\n#### What are the most popular sources? \n## we must \"read\" the previous plot accordingly\n## Twitter is by large the most used data source, followed by Flickr\n\n#### Are sources used in isolation or in combination?\n## we must \"read\" the previous plot accordingly\n## Most studies used one data source in isolation. Combination of distinct data sources is a rare exception\n\n\n#################\n## REVISIT FOR CEUS \n## RQ 2: Focus/Intended  uses \n## What are the main categories of the paper?\n## What are the most frequently focus within each category?\n## What are the most frequently intended uses within the main focus?\n\n#### Notes on the variables:\n#### f.cat0: Factor (data-centric, human-centric, application-centric), group or main category of the paper\n#### f.cat1: Factor (several levels), the focus within each category\n#### f.cat2: Factor (several levels), the intended use within each focus\n#################\n\n# how many papers are classified as data-centric\ndc <- data[data$f.cat0==\"data-centric\",]\nlength(unique(dc$p.id)) #40\n\n# how many papers are classified as data-centric\nhc <- data[data$f.cat0==\"human-centric\",]\nlength(unique(hc$p.id)) #19\n\n# how many papers are classified as applicaiton-centric\nac <- data[data$f.cat0==\"application-centric\",]\nlength(unique(ac$p.id)) #14\n\ntotal.data <- length(unique(dc$p.id))\ntotal.human <- length(unique(hc$p.id))\ntotal.app <- length(unique(ac$p.id))\n\n# How to visualiza these sets? Radial Sets use an alternative visual metaphor to represent overlapping sets compared to Euler Diagram \ndcu <- unique(dc$p.id)\nhcu <- unique(hc$p.id)\nacu <- unique(ac$p.id)\ncount(hcu %in% dcu)\ncount(acu %in% dcu)\ncount(acu %in% hcu)\n\n\nsubsetCat <- data[,c(\"p.id\", \"f.cat0\",\"f.cat1\", \"f.cat2\", \"p.year\")]\n\n#### What are the distribution of papers along the main categories?\n## Run the function length() on the value of \"f.cat0\" for each group (f.cat0) \nsubsetCat0 <- ddply(subsetCat, c(\"f.cat0\"), summarise, \n                    countCat0  = length(unique(p.id)))\n\n############ FINAL FIGURE #################\nppi=600\njpeg(filename = \"./figures/fig05a.jpg\",width=4*ppi, height=5*ppi, res=ppi, quality=100)\n\n## graph of counts, reorder to show counts of \"f.cat0\" in order\nggplot(subsetCat0, aes(x=reorder(f.cat0, countCat0), y=countCat0, fill=f.cat0)) +\n    geom_bar(stat=\"identity\", width=0.4, colour=\"black\") + \n    #coord_flip() +\n    theme_bw(base_family = \"Times\", base_size=10) + \n    geom_text(aes(label=countCat0), vjust=1.5, colour=\"black\", size=3) +\n    scale_y_continuous(breaks=c(seq(0,60,5))) +\n    labs(x = \"Main categories\") + \n    labs(y = \"Number of papers\") + \n    #labs(title = \"Number of papers by main categories\") +\n    scale_colour_brewer(palette=\"Set1\") +\n    theme(legend.position=\"none\") + # remove legend\n    theme(panel.grid.major.x = element_blank(),\n          panel.grid.minor.x = element_blank()) # Hide the horizontal grid lines\ndev.off()\n############ END FINAL FIGURE #################\n\n\nsubsetUseCases <- data[,c(\"p.id\", \"f.cat0\",\"f.cat1\", \"f.cat2\", \"f.uc0\", \"f.uc1\", \"p.year\")]\n\n#### What are the distribution of use cases along the main categories?\n## Run the function length() on the value of \"f.cat0\" for each group (f.cat0) \nsubsetUseCases0 <- ddply(subsetUseCases, c(\"f.cat0\", \"f.uc0\"), summarise, \n                         countCat0  = length(unique(p.id)))\n \n#                         pct = countCat0 / subsetCat0[subsetUseCases$f.cat0,]$countCat0)\n\nlevels(subsetUseCases0$f.uc0)[levels(subsetUseCases0$f.uc0)==\"natural harzards and man-made events\"] <- \"natural harzards and\\n man-made events\"\n\n# Turn NA as a factor level\nsubsetUseCases0$f.uc0 <- addNA(subsetUseCases0$f.uc0)\n# Rename level of a factor by index: change fourh item, NA, to \"Not specified\".\nlevels(subsetUseCases0$f.uc0)[4] <- \"not specified\"\nlevels(subsetUseCases0$f.uc0)\n\n\nsubsetUseCases0[1, c(\"pct\")] <- percent(subsetUseCases0[1, c(\"countCat0\")] / total.app)\nsubsetUseCases0[2, c(\"pct\")] <- percent(subsetUseCases0[2, c(\"countCat0\")] / total.app)\nsubsetUseCases0[3, c(\"pct\")] <- percent(subsetUseCases0[3, c(\"countCat0\")] / total.app)\nsubsetUseCases0[4, c(\"pct\")] <- percent(subsetUseCases0[4, c(\"countCat0\")] / total.data)\nsubsetUseCases0[5, c(\"pct\")] <- percent(subsetUseCases0[5, c(\"countCat0\")] / total.data)\nsubsetUseCases0[6, c(\"pct\")] <- percent(subsetUseCases0[6, c(\"countCat0\")] / total.data)\nsubsetUseCases0[7, c(\"pct\")] <- percent(subsetUseCases0[7, c(\"countCat0\")] / total.data)\nsubsetUseCases0[8, c(\"pct\")] <- percent(subsetUseCases0[8, c(\"countCat0\")] / total.human)\nsubsetUseCases0[9, c(\"pct\")] <- percent(subsetUseCases0[9, c(\"countCat0\")] / total.human)\nsubsetUseCases0[10, c(\"pct\")] <- percent(subsetUseCases0[10, c(\"countCat0\")] / total.human)\nsubsetUseCases0[11, c(\"pct\")] <- percent(subsetUseCases0[11, c(\"countCat0\")] / total.human)\n\n############ FINAL FIGURE #################\nppi=600\njpeg(filename = \"./figures/fig05b.jpg\",width=4*ppi, height=5*ppi, res=ppi, quality=100)\n\n## graph of counts, reorder to show counts of \"f.cat0\" in order\nggplot(subsetUseCases0, aes(x=reorder(f.cat0, countCat0), y=countCat0, fill=f.uc0)) +\n  geom_bar(stat=\"identity\", width=0.4, colour=\"black\") + \n  #coord_flip() +\n  theme_bw(base_family = \"Times\", base_size=10) + \n  #geom_text(aes(label=pct), vjust=1.5*subsetUseCases0$pct, colour=\"black\", size=3) +\n  #scale_y_continuous(breaks=c(seq(0,60,5))) +\n  labs(x = \"Main categories\") + \n  labs(y = \"Number of papers\") + \n  #labs(title = \"Number of papers by main categories\") +\n  scale_color_brewer(palette=\"Set2\") +\n  labs(fill=\"Use cases\") +   # set the legend title\n  theme(legend.position=c(0,1), legend.justification=c(0,1)) +  # set legend position inside graphic, tpo-left position    \n  theme(legend.background=element_blank()) + # Remove overall border of legend\n  # theme(legend.position=\"none\") + # remove legend\n  theme(panel.grid.major.x = element_blank(),\n        panel.grid.minor.x = element_blank()) # Hide the horizontal grid lines\ndev.off()\n############ END FINAL FIGURE #################\n\n\n\n\n\n#### What are the distribution of sub-categories/focuses within each category?\n## Run the function length() on the value of \"f.cat1\" for each group (f.cat0, f.cat1) \n## to sum the ocurrences  of f.cat1 within each group\nsubsetCat1 <- ddply(subsetCat, c(\"f.cat0\", \"f.cat1\"), summarise, \n                        #countCat1 = length(f.cat1))\n                        countCat1 = length(unique(f.cat1)))\n\n# Get the sub-category (f.cat1), sorted first by category (f.cat0), then by count  \ncat1order <- subsetCat1$f.cat1[order(subsetCat1$f.cat0, subsetCat1$countCat1)]\n# Turn f.cat1 into a factor, with levels in the order of cat1order\nsubsetCat1$f.cat1 <- factor(subsetCat1$f.cat1, levels=cat1order)\n############ FINAL FIGURE #################\nppi=600\njpeg(filename = \"./figures/fig06.jpg\",width=6*ppi, height=5*ppi, res=ppi, quality=100)\n\nggplot(subsetCat1, aes(x=f.cat1, y=countCat1, fill=f.cat0)) +\n    geom_bar(stat=\"identity\", width=0.6, colour=\"black\") + \n    coord_flip() +\n    theme_bw(base_family = \"Times\", base_size=10) + \n    theme(panel.grid.major.y = element_blank()) +\n    scale_colour_brewer(palette=\"Set1\") +\n    #scale_fill_brewer(\"clarity\") +\n    geom_text(aes(label=countCat1), hjust=1.5, colour=\"black\", size=3) +\n    scale_y_continuous(breaks=c(seq(0,30,5))) +\n    labs(x = \"Sub-category / focus\") + \n    labs(y = \"Number of papers\") +\n    guides(fill=guide_legend(title=\"Main categories\")) +  # Set the legend title\n    theme(legend.position=c(1,.1), legend.justification=c(1,0)) +  # set legend position inside graphic, bottom-right position    \n    theme(legend.background=element_blank()) # Remove overall border of legend\n    #labs(title = \"Number of paper by focus (fcat1) and categories (fcat0)\") +\ndev.off()    \n\n############ END FINAL FIGURE #################\n\n### Put Figure 5 and use case distribution  side by side\nppi=600\njpeg(filename = \"./figures/fig05-06.jpg\",width=5*ppi, height=5*ppi, res=ppi, quality=100)\n\nplot1<- ggplot(subsetCat0, aes(x=reorder(f.cat0, countCat0), y=countCat0, fill=f.cat0)) +\n        geom_bar(stat=\"identity\", width=0.4, colour=\"black\") + \n        #coord_flip() +\n        theme_bw(base_family = \"Times\", base_size=10) + \n        geom_text(aes(label=countCat0), vjust=1.5, colour=\"black\", size=3) +\n        scale_y_continuous(breaks=c(seq(0,60,5))) +\n        labs(x = \"Main categories\") + \n        labs(y = \"Number of papers\") + \n        #labs(title = \"Number of papers by main categories\") +\n        scale_colour_brewer(palette=\"Set1\") +\n        theme(legend.position=\"none\") + # remove legend\n        theme(panel.grid.major.x = element_blank(),\n              panel.grid.minor.x = element_blank()) # Hide the horizontal grid lines\nplot2<-ggplot(subsetCat1, aes(x=f.cat1, y=countCat1, fill=f.cat0)) +\n    geom_bar(stat=\"identity\", width=0.4, colour=\"black\") + \n    coord_flip() +\n    theme_bw(base_family = \"Times\", base_size=10) + \n    theme(panel.grid.major.y = element_blank()) +\n    scale_colour_brewer(palette=\"Set1\") +\n    #scale_fill_brewer(\"clarity\") +\n    geom_text(aes(label=countCat1), hjust=1.5, colour=\"black\", size=3) +\n    scale_y_continuous(breaks=c(seq(0,30,5))) +\n    labs(x = \"Sub-category / focus\") + \n    labs(y = \"Number of papers\") +\n    guides(fill=guide_legend(title=\"Main categories\")) +  # Set the legend title\n    theme(legend.position=c(1,.1), legend.justification=c(1,0)) +  # set legend position inside graphic, bottom-right position    \n    theme(legend.background=element_blank()) # Remove overall border of legend\n    #labs(title = \"Number of paper by focus (fcat1) and categories (fcat0)\") +\n\n\nlibrary(grid)\npushViewport(viewport(layout = grid.layout(1, 2)))\nprint(plot1, vp = viewport(layout.pos.row = 1, layout.pos.col = 1))\nprint(plot2, vp = viewport(layout.pos.row = 1, layout.pos.col = 2))\n\ndev.off()    \n#### What are the most frequently intended uses within each focus?\n## Run the function length() on the value of \"f.cat2\" for each group (f.cat0, f.cat1, f.cat2) \n## to sum the ocurrences  of f.cat2 within each group\nsubsetCat2 <- ddply(subsetCat, c(\"f.cat0\", \"f.cat1\", \"f.cat2\"), summarise, \n                    countCat2 = length(unique(p.id)))\n\ndataCentric <- subset(subsetCat2,f.cat0==\"data-centric\")\n\n# Get the intended uses (f.cat2), sorted first by cat1 (focus), then by count  \ncat2order <- dataCentric$f.cat2[order(dataCentric$f.cat1, dataCentric$countCat2)]\n# Turn f.cat2 into a factor, with levels in the order of cat2order\ndataCentric$f.cat2 <- factor(dataCentric$f.cat2, levels=cat2order)\n\n# A trick to change legend title is to rename the column in the dataframe\nnames(dataCentric)[names(dataCentric)==\"f.cat1\"]  <- \"Focus\"\n\n# Change legend labels to add the total number of papers that belong to f.cat1. This make previus figure unecessary\ndataCentric.limits <- c(\"data preservation\",\n                        \"data preparation\",\n                        \"data policies\", \n                        \"data contextualization\", \n                        \"data quality and assessment\")\n\ndataCentric.legend <- c(\"data preservation (1)\",\n                        \"data preparation (30)\",\n                        \"data policies (5)\",\n                        \"data contextualization (13)\",\n                        \"data quality \\nand assessment (10)\")\n\n############ FINAL FIGURE #################\nppi=600\njpeg(filename = \"./figures/fig07.jpg\",width=9*ppi, height=5*ppi, res=ppi, quality=100)\n\nggplot(dataCentric, aes(x=f.cat2, y=countCat2, fill=Focus)) +    \n    geom_bar(stat=\"identity\", width=0.6, colour=\"black\") + \n    coord_flip() +\n    theme_bw(base_family = \"Times\", base_size=10) +\n    scale_colour_brewer(palette=\"Set1\") +\n    scale_y_continuous(breaks=c(seq(0,15,1))) +\n    labs(y = \"Number of papers\") + \n    labs(x = \"Intended uses within data-centric category\") + \n    #labs(title = \"Data-centric category broken by Focus and Intended Use\") +\n    geom_text(aes(label=countCat2), hjust=1.5, colour=\"black\", size=3) +\n    theme(legend.position=c(1,.1), legend.justification=c(1,0)) +  # set legend position inside graphic, bottom-roght position    \n    theme(legend.background=element_blank()) + # Remove overall border of legend\n    scale_fill_discrete(\n      limits=dataCentric.limits,\n      labels=dataCentric.legend) +  # custom legend labels\n    #theme(legend.key=element_blank()) + # Remove border around each item of legend\n    theme(panel.grid.major.y = element_blank()) # No horizontal grid lines\n\ndev.off()\n############ END FINAL FIGURE #################\nnames(dataCentric)[names(dataCentric)==\"Focus\"]  <- \"f.cat1\"\n\n# A trick to change legend title is to rename the column in the dataframe\nnames(dataCentric)[names(dataCentric)==\"f.cat1\"]  <- \"Focus\"\n\nppi=300\njpeg(filename = \"./figures/fig07-dots.jpg\",width=9*ppi, height=5*ppi, res=ppi, quality=100)\n\nggplot(dataCentric, aes(x=countCat2, y=f.cat2)) +    \n    geom_point(size=3, aes(colour=Focus)) +    # Use a larger dot\n    geom_segment(aes(yend=f.cat2), xend=0, colour=\"grey50\") +\n    theme_bw(base_family = \"Times\", base_size=10) +\n    scale_colour_brewer(palette=\"Set1\") +\n    scale_x_continuous(breaks=c(seq(0,15,1))) +\n    labs(x = \"Number of papers\") + \n    labs(y = \"Intended uses within data-centric category\") + \n    #labs(title = \"Data-centric category broken by Focus and Intended Use\") +\n    theme(legend.position=c(1,.1), legend.justification=c(1,0)) +  # set legend position inside graphic, bottom-roght position    \n    theme(legend.background=element_blank()) + # Remove overall border of legend\n    #theme(legend.key=element_blank()) + # Remove border around each item of legend\n    theme(panel.grid.major.y = element_blank()) # No horizontal grid lines\n\ndev.off()\nnames(dataCentric)[names(dataCentric)==\"Focus\"]  <- \"f.cat1\"\n\n\nppi=300\njpeg(filename = \"./figures/fig07-optionA.jpg\",width=9*ppi, height=5*ppi, res=ppi, quality=100)\n\n## We use a dot plot faceted by focus (f.cat1)\nggplot(dataCentric, aes(x=countCat2, y=f.cat2)) +    \n    geom_point(size=3, aes(colour=f.cat1)) +    # Use a larger dot\n    geom_segment(aes(yend=f.cat2), xend=0, colour=\"grey50\") +\n    theme_bw(base_family = \"Avenir\", base_size=10) +\n    scale_colour_brewer(palette=\"Set1\", guide=FALSE) +\n    scale_x_continuous(breaks=c(seq(0,8,1))) +\n    labs(x = \"Number\") + \n    labs(y = \"Intended uses (fcat2)\") + \n    labs(title = \"Data-centric category by Focus and Intended Use\") +\n    theme(panel.grid.major.y = element_blank()) + # No horizontal grid lines\n    facet_grid(. ~ f.cat1, scales=\"free_y\", space=\"free_y\")\n  \ndev.off()\n\n\nggplot(dataCentric, aes(x=f.cat1, y=f.cat2)) +\n    geom_point(aes(size=countCat2), shape=21, colour=\"black\", fill=\"grey90\") +\n    theme_bw(base_family = \"Avenir\", base_size=10) +\n    scale_size_area(max_size=15, guide=FALSE) +\n    labs(x = \"Focus (fcat1)\") + \n    labs(y = \"Intended uses (fcat2)\") + \n    labs(title = \"Data-centric category broken by Focus and Intended Use\") +\n    theme(axis.text.x = element_text(angle=30, hjust=1, vjust=1)) + # Rotating the text 30 degrees\n    geom_text(aes(label=countCat2), vjust=0, colour=\"grey30\", size=3)   # Add labels from data\n\n\n#### What are the most frequently intended uses within each focus?\nggplot(subsetCat2, aes(x=reorder(f.cat2, countCat2), y=countCat2, fill=f.cat1)) +\n    geom_bar(stat=\"identity\") + coord_flip() +\n    theme_bw(base_family = \"Avenir\", base_size=10) + \n    theme(panel.grid.major.y = element_blank()) +   # No horizontal grid lines\n    geom_text(aes(label=countCat2), hjust=1.5, colour=\"white\") +\n    labs(x = \"Intended uses\") + \n    labs(y = \"Count\") + \n    labs(title = \"Counts of intended use (fcat2) broken by focus (fcat1)\") \n    \n\n# Alternative graph: Split subsetCat2 into 3 dataframes by f.cat0. \ndataCentric <- subset(subsetCat2,f.cat0==\"data-centric\")\n\n# Then create a balloon plot with f.cat1 and f.cat2 as categorical axes\nggplot(dataCentric, aes(x=f.cat1, y=f.cat2)) +\n    geom_point(aes(size=countCat2), shape=21, colour=\"black\", fill=\"grey90\") +\n    theme_bw(base_family = \"Avenir\", base_size=10) +\n    scale_size_area(max_size=15, guide=FALSE) +\n    labs(x = \"Focus (fcat1)\") + \n    labs(y = \"Intended uses (fcat2)\") + \n    labs(title = \"Data-centric category broken by Focus and Intended Use\") +\n    theme(axis.text.x = element_text(angle=30, hjust=1, vjust=1)) + # Rotating the text 30 degrees\n    geom_text(aes(label=countCat2), vjust=0, colour=\"grey30\", size=3)   # Add labels from data\n\n\nhumanCentric <- subset(subsetCat2,f.cat0==\"human-centric\")\n# Get the intended uses (f.cat2), sorted first by cat1 (focus), then by count  \ncat2order <- humanCentric$f.cat2[order(humanCentric$f.cat1, humanCentric$countCat2)]\n# Turn f.cat2 into a factor, with levels in the order of cat2order\nhumanCentric$f.cat2 <- factor(humanCentric$f.cat2, levels=cat2order)\n\n# A trick to change legend title is to rename the column in the dataframe\nnames(humanCentric)[names(humanCentric)==\"f.cat1\"]  <- \"Focus\"\n\n# Change legend labels to add the total number of papers that belong to f.cat1.\nhumanCentric.limits <- c(\"human relations\",\n                         \"human perception\",\n                         \"human mobility\", \n                         \"human behaviour\", \n                         \"human activities\", \n                         \"human (spatial) perceptions\")\n                         \nhumanCentric.legend <- c(\"human relations (3)\",\n                         \"human perception (1)\",\n                         \"human mobility (7)\", \n                         \"human behaviour (1)\", \n                         \"human activities (5)\", \n                         \"human (spatial) perceptions (3)\")\n                        \n############ FINAL FIGURE #################\nppi=600\njpeg(filename = \"./figures/fig08.jpg\",width=6*ppi, height=5*ppi, res=ppi, quality=100)\n\n    \nggplot(humanCentric, aes(x=f.cat2, y=countCat2, fill=Focus)) +    \n    geom_bar(stat=\"identity\", width=0.6, colour=\"black\") +\n    coord_flip() +\n    theme_bw(base_family = \"Times\", base_size=10) +\n    scale_colour_brewer(palette=\"Set1\") +\n    scale_y_continuous(breaks=c(seq(0,3,1))) +\n    labs(y = \"Number of papers\") + \n    labs(x = \"Intended uses within human-centric category\") + \n    #labs(title = \"Human-centric category broken by Focus and Intended Use\") +\n    geom_text(aes(label=countCat2), hjust=1.5, colour=\"black\", size=3) +\n    guides(fill=guide_legend(title=\"Focus\")) +  # Set the legend title\n    scale_fill_discrete(\n      limits=humanCentric.limits,\n      labels=humanCentric.legend) +  # custom legend labels\n    #theme(legend.position=c(1.5,.1), legend.justification=c(1,0)) +  # set legend position inside graphic, bottom-right position    \n    #theme(legend.background=element_blank()) + # Remove overall border of legend\n    #theme(legend.key=element_blank()) + # Remove border around each item of legend\n    theme(panel.grid.major.y = element_blank()) # No horizontal grid lines\n\ndev.off()\n############ END FINAL FIGURE #################\nnames(humanCentric)[names(humanCentric)==\"Focus\"]  <- \"f.cat1\"\n\n\n# A trick to change legend title is to rename the column in the dataframe\nnames(humanCentric)[names(humanCentric)==\"f.cat1\"]  <- \"Focus\"\n\nppi=300\njpeg(filename = \"./figures/fig08-dots.jpg\",width=7*ppi, height=5*ppi, res=ppi, quality=100)\n\nggplot(humanCentric, aes(x=countCat2, y=f.cat2)) +    \n    geom_point(size=3, aes(colour=Focus)) +    # Use a larger dot\n    geom_segment(aes(yend=f.cat2), xend=0, colour=\"grey50\") +\n    theme_bw(base_family = \"Avenir\", base_size=10) +\n    scale_colour_brewer(palette=\"Set1\") +\n    scale_x_continuous(breaks=c(seq(0,3,1))) +\n    labs(x = \"Number of papers\") + \n    labs(y = \"Intended uses within human-centric category\") + \n    #labs(title = \"Human-centric category broken by Focus and Intended Use\") +\n    guides(fill=guide_legend(title=\"Focus\")) +  # Set the legend title\n    #theme(legend.position=c(1.5,.1), legend.justification=c(1,0)) +  # set legend position inside graphic, bottom-right position    \n    #theme(legend.background=element_blank()) + # Remove overall border of legend\n    #theme(legend.key=element_blank()) + # Remove border around each item of legend\n    theme(panel.grid.major.y = element_blank()) # No horizontal grid lines\n\ndev.off()\nnames(humanCentric)[names(humanCentric)==\"Focus\"]  <- \"f.cat1\"\n\n\n\nggplot(humanCentric, aes(x=f.cat1, y=f.cat2)) +\n    geom_point(aes(size=countCat2), shape=21, colour=\"black\", fill=\"grey90\") +\n    theme_bw(base_family = \"Avenir\", base_size=10) +\n    scale_size_area(max_size=15, guide=FALSE) +\n    labs(x = \"Focus (fcat1)\") + \n    labs(y = \"Intended uses (fcat2)\") + \n    labs(title = \"Human-centric category broken by Focus and Intended Use\") +\n    theme(axis.text.x = element_text(angle=30, hjust=1, vjust=1)) + # Rotating the text 30 degrees\n    geom_text(aes(label=countCat2), vjust=0, colour=\"grey30\", size=3)   # Add labels from data\n    \n\napplicationCentric <- subset(subsetCat2,f.cat0==\"application-centric\")\n# Get the intended uses (f.cat2), sorted first by cat1 (focus), then by count  \ncat2order <- applicationCentric$f.cat2[order(applicationCentric$f.cat1, applicationCentric$countCat2)]\n# Turn f.cat2 into a factor, with levels in the order of cat2order\napplicationCentric$f.cat2 <- factor(applicationCentric$f.cat2, levels=cat2order)\n\n# A trick to change legend title is to rename the column in the dataframe\nnames(applicationCentric)[names(applicationCentric)==\"f.cat1\"]  <- \"Focus\"\n\n# Change legend labels to add the total number of papers that belong to f.cat1. This make previus figure unecessary\nappCentric.limits <- c(\"recovery and response\",\n                       \"monitoring\",\n                       \"health\",\n                       \"detection and prediction\",\n                       \"coordination and organization\")\n\nappCentric.legend <- c(\"recovery and response (4)\",\n                       \"monitoring (4)\",\n                       \"health (1)\",\n                       \"detection and prediction (4)\",\n                       \"coordination and organization (1)\")\n\n############ FINAL FIGURE #################\nppi=600\njpeg(filename = \"./figures/fig09.jpg\",width=6*ppi, height=4*ppi, res=ppi, quality=100)\n\nggplot(applicationCentric, aes(x=f.cat2, y=countCat2, fill=Focus)) +    \n    geom_bar(stat=\"identity\", width=0.6, colour=\"black\") +\n    coord_flip() +\n    theme_bw(base_family = \"Times\", base_size=10) +\n    scale_colour_brewer(palette=\"Set1\") +\n    scale_y_continuous(breaks=c(seq(0,4,1))) +\n    labs(y = \"Number of papers\") + \n    labs(x = \"Intended uses within application-centric category\") + \n    #labs(title = \"Application-centric category broken by Focus and Intended Use\") +\n    geom_text(aes(label=countCat2), hjust=1.5, colour=\"black\", size=3) +\n    scale_fill_discrete(\n      limits=appCentric.limits,\n      labels=appCentric.legend) +  # custom legend labels\n    #theme(legend.position=c(1,0), legend.justification=c(1,0)) +  # set legend position inside graphic, bottom-right position    \n    #theme(legend.background=element_blank()) + # Remove overall border of legend\n    #theme(legend.key=element_blank()) + # Remove border around each item of legend\n    theme(panel.grid.major.y = element_blank()) # No horizontal grid lines\n\ndev.off()\n############ END FINAL FIGURE #################\nnames(applicationCentric)[names(applicationCentric)==\"Focus\"]  <- \"f.cat1\"\n\n\n# A trick to change legend title is to rename the column in the dataframe\nnames(applicationCentric)[names(applicationCentric)==\"f.cat1\"]  <- \"Focus\"\n\nppi=300\njpeg(filename = \"./figures/fig09-dots.jpg\",width=6*ppi, height=5*ppi, res=ppi, quality=100)\nggplot(applicationCentric, aes(x=countCat2, y=f.cat2)) +    \n    geom_point(size=3, aes(colour=Focus)) +    # Use a larger dot\n    geom_segment(aes(yend=f.cat2), xend=0, colour=\"grey50\") +\n    theme_bw(base_family = \"Avenir\", base_size=10) +\n    scale_colour_brewer(palette=\"Set1\") +\n    scale_x_continuous(breaks=c(seq(0,4,1))) +\n    labs(x = \"Number of papers\") + \n    labs(y = \"Intended uses within application-centric category\") + \n    #labs(title = \"Application-centric category broken by Focus and Intended Use\") +\n    theme(legend.position=c(1,0), legend.justification=c(1,0)) +  # set legend position inside graphic, bottom-right position    \n    theme(legend.background=element_blank()) + # Remove overall border of legend\n    #theme(legend.key=element_blank()) + # Remove border around each item of legend\n    theme(panel.grid.major.y = element_blank()) # No horizontal grid lines\n\nnames(applicationCentric)[names(applicationCentric)==\"Focus\"]  <- \"f.cat1\"\n\n\nggplot(applicationCentric, aes(x=f.cat1, y=f.cat2)) +\n    geom_point(aes(size=countCat2), shape=21, colour=\"black\", fill=\"grey90\") +\n    theme_bw(base_family = \"Avenir\", base_size=10) +\n    scale_size_area(max_size=15, guide=FALSE) +\n    labs(x = \"Focus (fcat1)\") + \n    labs(y = \"Intended uses (fcat2)\") +\n    labs(title = \"Appplication-centric category broken by Focus and Intended Use\") +\n    theme(axis.text.x = element_text(angle=30, hjust=1, vjust=1)) + # Rotating the text 30 degrees\n    geom_text(aes(label=countCat2), vjust=0, colour=\"grey30\", size=3)   # Add labels from data\n\n\n\n#### Summary: distribution of intended uses over time\n## Run the function length() on the value of \"f.cat2\" for each group (f.cat0, f.cat1, f.cat2, p.year) \n## to sum the ocurrences  of f.cat2 within each group\nsubsetCat3 <- ddply(subsetCat, c(\"f.cat0\", \"f.cat1\", \"f.cat2\", \"p.year\"), summarise, \n                    countCat3 = length(f.cat2))\n\n# Get the intended uses (f.cat2), sorted first by cat1 (focus), then by count\ncat2order <- subsetCat3$f.cat2[order(subsetCat3$f.cat1, subsetCat3$countCat3)]\n# Turn f.cat2 into a factor, with levels in the order of cat2order\nsubsetCat3$f.cat2 <- factor(subsetCat3$f.cat2, levels=cat2order)\n\n############ FINAL FIGURE #################\nppi=600\njpeg(filename = \"./figures/ceus-fig11.jpg\",width=6*ppi, height=9*ppi, res=ppi, quality=100)\nggplot(subsetCat3, aes(x=p.year, y=f.cat2, colour=f.cat0)) +\n    geom_point(aes(size=countCat3)) + \n    scale_size_continuous(range=c(1,6)) +  # range of values for dots size (number of papers)\n    theme_bw(base_family = \"Times\", base_size=10) +\n    theme(axis.text.y=element_text(colour=\"black\")) + # change apparence of tick labels\n    scale_size_area(max_size=12) +   # scale dots to make them bigger\n    #scale_fill_hue() + \n    scale_colour_brewer(palette=\"Set2\") +\n    labs(colour=\"Category\", size=\"Number of\\n papers\") +\n    labs(x = \"Year of publication\") + \n    labs(y = \"Intended uses\") + \n    #labs(title = \"Intended uses over time\") +\n    geom_text(aes(label=countCat3), vjust=0.1, colour=\"black\", size=2)   # Add labels from data\n    \ndev.off()\n############ END FINAL FIGURE #################\n\n\n#################\n## What about the distribution of end users? How are they related to intended uses\n## What about the specification of user case scenarios related to intended uses\n\n## Notes on the variables:\n## f.uc0: Factor(natural harzards, man-made events), it groups the overall use case of the paper into main categories\n## f.uc1: Character, it describes the overall use case of the paper\n## f.user: Factor(several levels), it describes the stakeholders or end users targeted in the paper\n#################\n\n###########################################################\n#                       ONGOING\n###########################################################\n\ntreatment <- factor(rep(c(1, 2), c(43, 41)), levels = c(1, 2),\n                    labels = c(\"placebo\", \"treated\"))\nimproved <- factor(rep(c(1, 2, 3, 1, 2, 3), c(29, 7, 7, 13, 7, 21)),\n                   levels = c(1, 2, 3),\n                   labels = c(\"none\", \"some\", \"marked\"))\n\n# The widths of the columns is proportional to the number of samples in each of the corresponding age categories\nspineplot(improved, treatment)\n\nsubsetUseCases <- data[,c(\"f.cat0\",\"f.cat1\", \"f.cat2\", \"f.uc0\", \"f.uc1\", \"p.year\")]\n\n#### What are the distribution of use cases along the main categories?\n## Run the function length() on the value of \"f.cat0\" for each group (f.cat0) \nsubsetUseCases0 <- ddply(subsetUseCases, c(\"f.cat0\", \"f.uc0\"), summarise, \n                    countCat0  = length(f.cat0), \n                    pct = countCat0 / sum(countCat0))\n\nlevels(subsetUseCases0$f.uc0)[levels(subsetUseCases0$f.uc0)==\"natural harzards and man-made events\"] <- \"natural harzards and\\n man-made events\"\n\n# Turn NA as a factor level\nsubsetUseCases0$f.uc0 <- addNA(subsetUseCases0$f.uc0)\n# Rename level of a factor by index: change fourh item, NA, to \"Unknown\".\nlevels(subsetUseCases0$f.uc0)[4] <- \"Unknown\"\nlevels(subsetUseCases0$f.uc0)\n\n############ TENTATIVE FIGURE #################\nppi=600\njpeg(filename = \"./figures/fig05b.jpg\",width=4*ppi, height=5*ppi, res=ppi, quality=100)\n\n## graph of counts, reorder to show counts of \"f.cat0\" in order\nggplot(subsetUseCases0, aes(x=reorder(f.cat0, countCat0), y=countCat0, fill=f.uc0)) +\n    geom_bar(stat=\"identity\", width=0.4, colour=\"black\") + \n    #coord_flip() +\n    theme_bw(base_family = \"Times\", base_size=10) + \n    #geom_text(aes(label=countCat0), vjust=1.5, colour=\"black\", size=3) +\n    #scale_y_continuous(breaks=c(seq(0,60,5))) +\n    labs(x = \"Main categories\") + \n    labs(y = \"Number of papers\") + \n    #labs(title = \"Number of papers by main categories\") +\n    scale_color_brewer(palette=\"Set2\") +\n    labs(fill=\"Use cases\") +   # set the legend title\n    theme(legend.position=c(0,1), legend.justification=c(0,1)) +  # set legend position inside graphic, tpo-left position    \n    theme(legend.background=element_blank()) + # Remove overall border of legend\n    # theme(legend.position=\"none\") + # remove legend\n    theme(panel.grid.major.x = element_blank(),\n          panel.grid.minor.x = element_blank()) # Hide the horizontal grid lines\ndev.off()\n############ END TENTATIVE FIGURE #################\n\n\nsubsetUsers <- data[,c(\"f.cat0\",\"f.cat1\", \"f.cat2\", \"f.uc0\", \"f.uc1\", \"f.user\", \"p.year\")]\n\n#### What are the distribution of use cases along the main categories?\n## Run the function length() on the value of \"f.cat0\" for each group (f.cat0) \nsubsetUsers0 <- ddply(subsetUsers, c(\"f.cat0\", \"f.uc0\", \"f.user\"), summarise, \n                         countCat0  = length(f.cat0), \n                         pct = countCat0 / sum(countCat0))\n\n\n\n\n\n\n#################\n### RQ: Analysis questions (Note: Summary tables in the paper are the main source to draw conclusions)\n#### What are the most frequently (spatial) data analyses methods, and in what context/application?\n#### What are the most frequently (spatial) data analyses methods in clujntion with VGI sources?\n#### ...\n#################\n\n\n#################\n### RQ: Misc and time-related questions \n#### In what context/application are VGI sources being used?\n#### What types of VGI research have been reported, to what extent, and how is the temporal evolution? \n#### Which categories/focus/intended uses of VGI research received most coverage and how have coverage changed over time? \n#### What are the research topics (keywords) being addressed in VGI research, to what extent are they covered and how is coverage evolving? \n#### ...\n#################\n\n\n",
    "created" : 1440408511770.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "2339720827",
    "id" : "481A3171",
    "lastKnownWriteTime" : 1440410922,
    "path" : "C:/Users/cgranell/Data/MyCode/paper-vgi-science/scripts/analytics-ceus.R",
    "project_path" : "scripts/analytics-ceus.R",
    "properties" : {
    },
    "relative_order" : 2,
    "source_on_save" : false,
    "type" : "r_source"
}